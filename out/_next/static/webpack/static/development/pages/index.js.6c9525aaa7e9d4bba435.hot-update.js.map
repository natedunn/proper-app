{"version":3,"file":"static/webpack/static/development/pages/index.js.6c9525aaa7e9d4bba435.hot-update.js","sources":["webpack:///./utils/helper.js"],"sourcesContent":["import { saveAs, FileSaver } from 'file-saver';\nimport axios from 'axios';\n\nconst JSZip = require('jszip');\n\n\nfunction slugify (str) {\n  str = str.replace(/^\\s+|\\s+$/g, '');\n\n  // Make the string lowercase\n  str = str.toLowerCase();\n\n  // Remove accents, swap ñ for n, etc\n  var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\n  var to = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\n  for (var i = 0, l = from.length; i < l; i++) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n  }\n\n  // Remove invalid chars\n  str = str.replace(/[^a-z0-9 -]/g, '')\n    // Collapse whitespace and replace by -\n    .replace(/\\s+/g, '-')\n    // Collapse dashes\n    .replace(/-+/g, '-');\n\n  return str;\n}\n\nfunction setManifestData (name, data, zip) {\n  if (data.length) {\n    const names = [];\n    data.forEach(item => {\n      if (item.origin.id.toLowerCase() === 'mas') {\n        names.push(`${item.id}::${slugify(item.name)}`);\n      } else {\n        names.push(item.id);\n      }\n    });\n    zip.file(`proper/manifest/${name}`, names.join('\\n'));\n  }\n}\n\nasync function generateFolders (zip) {\n  zip.folder('proper');\n  zip.folder('proper/lib');\n  zip.folder('proper/manifest');\n}\n\nasync function generatePresets (zip) {\n  // Presets\n  const presets = [\n    {\n      name: 'proper',\n      dir: false,\n      file: 'https://raw.githubusercontent.com/natedunn/proper/master/proper',\n    },\n    {\n      name: 'functions',\n      dir: false,\n      file:\n        'https://raw.githubusercontent.com/natedunn/proper/master/functions',\n    },\n    {\n      name: 'checks',\n      dir: 'lib',\n      file:\n        'https://raw.githubusercontent.com/natedunn/proper/master/lib/checks',\n    },\n    {\n      name: 'dotfiles',\n      dir: 'lib',\n      file:\n        'https://raw.githubusercontent.com/natedunn/proper/master/lib/dotfiles',\n    },\n    {\n      name: 'installs',\n      dir: 'lib',\n      file:\n        'https://raw.githubusercontent.com/natedunn/proper/master/lib/installs',\n    },\n    {\n      name: 'process',\n      dir: 'lib',\n      file:\n        'https://raw.githubusercontent.com/natedunn/proper/master/lib/process',\n    },\n    {\n      name: 'prompts',\n      dir: 'lib',\n      file:\n        'https://raw.githubusercontent.com/natedunn/proper/master/lib/prompts',\n    },\n    {\n      name: 'text',\n      dir: 'lib',\n      file: 'https://raw.githubusercontent.com/natedunn/proper/master/lib/text',\n    },\n    {\n      name: 'utilities',\n      dir: 'lib',\n      file:\n        'https://raw.githubusercontent.com/natedunn/proper/master/lib/utilities',\n    },\n    {\n      name: 'variables',\n      dir: 'lib',\n      file:\n        'https://raw.githubusercontent.com/natedunn/proper/master/lib/variables',\n    },\n  ];\n\n  for (const preset of presets) {\n    await axios.get(preset.file).then(res => {\n      console.log(`Getting from ${preset.file}`);\n      // Load presets\n      zip.file(\n        !preset.dir\n          ? `proper/${preset.name}`\n          : `proper/${preset.dir}/${preset.name}`,\n        res.data\n      );\n    })\n  }\n\n  // presets.forEach((preset) => {\n  //   axios\n  //     .get(preset.file)\n  //     .then(function (response) {\n  //       console.log(`Getting from ${preset.file}`);\n  //       // Load presets\n  //       zip.file(\n  //         !preset.dir\n  //           ? `proper/${preset.name}`\n  //           : `proper/${preset.dir}/${preset.name}`,\n  //         response.data\n  //       );\n  //     })\n  //     .catch(error => console.log(error));\n  // });\n}\n\nasync function generateManifests (queue, zip) {\n  // Get Zip Data\n  const npmItems = queue.filter(\n    item => item.origin.id.toLowerCase() === 'npm'\n  );\n  const composerItems = queue.filter(\n    item => item.origin.id.toLowerCase() === 'composer'\n  );\n  const masItems = queue.filter(\n    item => item.origin.id.toLowerCase() === 'mas'\n  );\n  const caskItems = queue.filter(\n    item => item.origin.id.toLowerCase() === 'cask'\n  );\n  const brewItems = queue.filter(\n    item => item.origin.id.toLowerCase() === 'homebrew'\n  );\n  setManifestData('npm', npmItems, zip);\n  setManifestData('composer', composerItems, zip);\n  setManifestData('apps', masItems, zip);\n  setManifestData('casks', caskItems, zip);\n  setManifestData('brews', brewItems, zip);\n}\n\nasync function makeZip (zip) {\n  zip.generateAsync({ type: 'blob' }).then(function (content) {\n    saveAs(content, 'proper.zip');\n  });\n}\n\nexport async function generateZip (queue) {\n  // New Zip\n  const zip = new JSZip();\n\n  // Create folders\n  try {\n    await generateFolders(zip);\n    await generatePresets(zip);\n    await generateManifests(queue, zip);\n    await makeZip(zip);\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AACA;AAxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DA;AA/DA;AAAA;AAiEA;AACA;AACA;AAMA;AACA;AA1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA4FA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}